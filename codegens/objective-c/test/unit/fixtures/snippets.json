{
  "Request Headers": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://mockbin.org/request\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n  NSDictionary *headers = @{\n    @\"my-sample-header\": @\"Lorem ipsum dolor sit amet\",\n    @\"testing\": @\"'singlequotes'\",\n    @\"TEST\": @\"\\\"doublequotes\\\"\"\n  };\n  [request setAllHTTPHeaderFields:headers];\n\n[request setHTTPMethod:@\"POST\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "Request Headers (With special Characters)": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/headers\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n  NSDictionary *headers = @{\n    @\"my-sample-header\": @\"Lorem ipsum dolor sit amet\",\n    @\"TEST\": @\"@#$%^&*()\",\n    @\"more\": @\",./';[]}{\\\":?><|\\\\\\\\\"\n  };\n  [request setAllHTTPHeaderFields:headers];\n\n[request setHTTPMethod:@\"GET\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "Request Headers with disabled headers": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/headers\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n  NSDictionary *headers = @{\n    @\"my-sample-header\": @\"Lorem ipsum dolor sit amet\",\n    @\"not-disabled-header\": @\"ENABLED\"\n  };\n  [request setAllHTTPHeaderFields:headers];\n\n[request setHTTPMethod:@\"GET\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "GET Request with disabled query": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/get?test=123&anotherone=232\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n\n[request setHTTPMethod:@\"GET\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "POST form data with special characters": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/post\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\nNSArray *parameters = @[\n  @{ @\"name\": @\"pl\", @\"value\": @\"'a'\" }, \n  @{ @\"name\": @\"qu\", @\"value\": @\"\\\"b\\\"\" }, \n  @{ @\"name\": @\"hdjkljh\", @\"value\": @\"c\" }, \n  @{ @\"name\": @\"sa\", @\"value\": @\"d\" }, \n  @{ @\"name\": @\"Special\", @\"value\": @\"!@#$%&*()^_+=`~\" }, \n  @{ @\"name\": @\"more\", @\"value\": @\",./';[]}{\\\":?><|\\\\\\\\\" } ];\nNSString *boundary = @\"----WebKitFormBoundary7MA4YWxkTrZu0gW\";\nNSError *error;\nNSMutableString *body = [NSMutableString string];\nfor (NSDictionary *param in parameters) {\n  [body appendFormat:@\"--%@\\r\\n\", boundary];\n  if (param[@\"fileName\"]) {\n    [body appendFormat:@\"Content-Disposition:form-data; name=\"%@\"; filename=\"%@\"\\r\\n\", param[@\"name\"], param[@\"fileName\"]];\n    [body appendFormat:@\"Content-Type: %@\\r\\n\\r\\n\", param[@\"contentType\"]];\n    [body appendFormat:@\"%@\", [NSString stringWithContentsOfFile:param[@\"fileName\"]     encoding:NSUTF8StringEncoding error:&error]];\n    if (error) {\n      NSLog(@\"%@\", error);\n    }\n  } else {\n    [body appendFormat:@\"Content-Disposition:form-data; name=\"%@\"\\r\\n\\r\\n\", param[@\"name\"]];\n    [body appendFormat:@\"%@\", param[@\"value\"]];\n  }\n}\n[body appendFormat:@\"\\r\\n--%@--\\r\\n\", boundary];\nNSData *postData = [body dataUsingEncoding:NSUTF8StringEncoding];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"POST\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "Resolve URL (Quotes + Special Characters) Copy": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/post?a=!@$%5E*()_-%60%2526&b=,./';%5B%5D%7D%7B%22:/?%3E%3C%7C%7C\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\nNSData *postData = [[NSData alloc] initWithData:[@\"\" dataUsingEncoding:NSUTF8StringEncoding]];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"POST\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "POST Raw Text": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/post\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n  NSDictionary *headers = @{\n    @\"Content-Type\": @\"text/plain\"\n  };\n  [request setAllHTTPHeaderFields:headers];\nNSData *postData = [[NSData alloc] initWithData:[@\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium. Praesent neque quam, tincidunt nec leo eget, rutrum vehicula magna.\\nMaecenas consequat elementum elit, id semper sem tristique et. Integer pulvinar enim quis consectetur interdum volutpat.!@#$%^&*()+POL:},'';,[;[;\" dataUsingEncoding:NSUTF8StringEncoding]];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"POST\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "POST urlencoded data": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/post\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n  NSDictionary *headers = @{\n    @\"Content-Type\": @\"application/x-www-form-urlencoded\"\n  };\n  [request setAllHTTPHeaderFields:headers];\nNSMutableData *postData = [[NSMutableData alloc] initWithData:[@\"1='a'\" dataUsingEncoding:NSUTF8StringEncoding]];\n[postData appendData:[@\"&2=\\\"b\\\"\" dataUsingEncoding:NSUTF8StringEncoding]];\n[postData appendData:[@\"&'3'=c\" dataUsingEncoding:NSUTF8StringEncoding]];\n[postData appendData:[@\"&\"4\"=d\" dataUsingEncoding:NSUTF8StringEncoding]];\n[postData appendData:[@\"&Special=!@#$%&*()^_=`~              \" dataUsingEncoding:NSUTF8StringEncoding]];\n[postData appendData:[@\"&more=,./';[]}{\\\":?><|\\\\\\\\    \" dataUsingEncoding:NSUTF8StringEncoding]];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"POST\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "POST json with raw": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/post\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n  NSDictionary *headers = @{\n    @\"Content-Type\": @\"application/json\"\n  };\n  [request setAllHTTPHeaderFields:headers];\nNSData *postData = [[NSData alloc] initWithData:[@\"{\\n  \\\"json\\\": \\\"Test-Test!@#$%^&*()+POL:},'';,[;[;:>\\\"\\n}\" dataUsingEncoding:NSUTF8StringEncoding]];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"POST\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "POST javascript with raw": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/post\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n  NSDictionary *headers = @{\n    @\"Content-Type\": @\"application/javascript\"\n  };\n  [request setAllHTTPHeaderFields:headers];\nNSData *postData = [[NSData alloc] initWithData:[@\"var val = 6;\\nconsole.log(val);\" dataUsingEncoding:NSUTF8StringEncoding]];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"POST\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "POST text/xml with raw": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/post\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n  NSDictionary *headers = @{\n    @\"Content-Type\": @\"text/xml\"\n  };\n  [request setAllHTTPHeaderFields:headers];\nNSData *postData = [[NSData alloc] initWithData:[@\"<xml>\\n\tTest Test!@#$%^&*()+POL:},'';,[;[;\\n</xml>\" dataUsingEncoding:NSUTF8StringEncoding]];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"POST\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "POST text/html with raw": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/post\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n  NSDictionary *headers = @{\n    @\"Content-Type\": @\"text/html\"\n  };\n  [request setAllHTTPHeaderFields:headers];\nNSData *postData = [[NSData alloc] initWithData:[@\"<html>\\n  Test Test !@#$%^&*()+POL:},'';,[;[;\\n</html>\" dataUsingEncoding:NSUTF8StringEncoding]];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"POST\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "Resolve URL": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/post?a=''&b=%22%22\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\nNSData *postData = [[NSData alloc] initWithData:[@\"\" dataUsingEncoding:NSUTF8StringEncoding]];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"POST\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "PUT Request": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/put\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n  NSDictionary *headers = @{\n    @\"Content-Type\": @\"text/plain\"\n  };\n  [request setAllHTTPHeaderFields:headers];\nNSData *postData = [[NSData alloc] initWithData:[@\"Etiam mi lacus, cursus vitae felis et, blandit pellentesque neque. Vestibulum eget nisi a tortor commodo dignissim.\\nQuisque ipsum ligula, faucibus a felis a, commodo elementum nisl. Mauris vulputate sapien et tincidunt viverra. Donec vitae velit nec metus.\" dataUsingEncoding:NSUTF8StringEncoding]];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"PUT\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "PATCH Request": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/patch\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n  NSDictionary *headers = @{\n    @\"Content-Type\": @\"text/plain\"\n  };\n  [request setAllHTTPHeaderFields:headers];\nNSData *postData = [[NSData alloc] initWithData:[@\"Curabitur auctor, elit nec pulvinar porttitor, ex augue condimentum enim, eget suscipit urna felis quis neque.\\nSuspendisse sit amet luctus massa, nec venenatis mi. Suspendisse tincidunt massa at nibh efficitur fringilla. Nam quis congue mi. Etiam volutpat.\" dataUsingEncoding:NSUTF8StringEncoding]];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"PATCH\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "DELETE Request": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/delete\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n  NSDictionary *headers = @{\n    @\"Content-Type\": @\"text/plain\"\n  };\n  [request setAllHTTPHeaderFields:headers];\nNSData *postData = [[NSData alloc] initWithData:[@\"Donec fermentum, nisi sed cursus eleifend, nulla tortor ultricies tellus, ut vehicula orci arcu ut velit. In volutpat egestas dapibus.\\nMorbi condimentum vestibulum sapien. Etiam dignissim diam quis eros lobortis gravida vel lobortis est. Etiam gravida sed.\" dataUsingEncoding:NSUTF8StringEncoding]];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"DELETE\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "OPTIONS to postman echo": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/post\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n  NSDictionary *headers = @{\n    @\"Content-Type\": @\"text/plain\"\n  };\n  [request setAllHTTPHeaderFields:headers];\nNSData *postData = [[NSData alloc] initWithData:[@\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium. Praesent neque quam, tincidunt nec leo eget, rutrum vehicula magna.\\nMaecenas consequat elementum elit, id semper sem tristique et. Integer pulvinar enim quis consectetur interdum volutpat.\" dataUsingEncoding:NSUTF8StringEncoding]];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"OPTIONS\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "LINK request": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://mockbin.org/request\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n\n[request setHTTPMethod:@\"LINK\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "UNLINK request": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://mockbin.org/request\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n  NSDictionary *headers = @{\n    @\"Content-Type\": @\"text/plain\"\n  };\n  [request setAllHTTPHeaderFields:headers];\nNSData *postData = [[NSData alloc] initWithData:[@\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium. Praesent neque quam, tincidunt nec leo eget, rutrum vehicula magna.\\nMaecenas consequat elementum elit, id semper sem tristique et. Integer pulvinar enim quis consectetur interdum volutpat.\" dataUsingEncoding:NSUTF8StringEncoding]];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"UNLINK\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "LOCK request": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://mockbin.org/request\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n  NSDictionary *headers = @{\n    @\"Content-Type\": @\"text/plain\"\n  };\n  [request setAllHTTPHeaderFields:headers];\nNSData *postData = [[NSData alloc] initWithData:[@\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium. Praesent neque quam, tincidunt nec leo eget, rutrum vehicula magna.\\nMaecenas consequat elementum elit, id semper sem tristique et. Integer pulvinar enim quis consectetur interdum volutpat.\" dataUsingEncoding:NSUTF8StringEncoding]];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"LOCK\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "UNLOCK request": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://mockbin.org/request\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n\n[request setHTTPMethod:@\"UNLOCK\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "PROPFIND request": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://mockbin.org/request\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n  NSDictionary *headers = @{\n    @\"Content-Type\": @\"text/plain\"\n  };\n  [request setAllHTTPHeaderFields:headers];\nNSData *postData = [[NSData alloc] initWithData:[@\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium. Praesent neque quam, tincidunt nec leo eget, rutrum vehicula magna.\\nMaecenas consequat elementum elit, id semper sem tristique et. Integer pulvinar enim quis consectetur interdum volutpat.\" dataUsingEncoding:NSUTF8StringEncoding]];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"PROPFIND\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "PURGE Request": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://mockbin.org/request\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n\n[request setHTTPMethod:@\"PURGE\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "COPY Request": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://mockbin.org/request\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n\n[request setHTTPMethod:@\"COPY\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "Post file": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/post\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\nNSArray *parameters = @[\n  @{ @\"name\": @\"uohou\", @\"fileName\": @\"/Users/umesh/Desktop/Screenshot 2019-09-29 at 10.50.30 AM.png\" } ];\nNSString *boundary = @\"----WebKitFormBoundary7MA4YWxkTrZu0gW\";\nNSError *error;\nNSMutableString *body = [NSMutableString string];\nfor (NSDictionary *param in parameters) {\n  [body appendFormat:@\"--%@\\r\\n\", boundary];\n  if (param[@\"fileName\"]) {\n    [body appendFormat:@\"Content-Disposition:form-data; name=\"%@\"; filename=\"%@\"\\r\\n\", param[@\"name\"], param[@\"fileName\"]];\n    [body appendFormat:@\"Content-Type: %@\\r\\n\\r\\n\", param[@\"contentType\"]];\n    [body appendFormat:@\"%@\", [NSString stringWithContentsOfFile:param[@\"fileName\"]     encoding:NSUTF8StringEncoding error:&error]];\n    if (error) {\n      NSLog(@\"%@\", error);\n    }\n  } else {\n    [body appendFormat:@\"Content-Disposition:form-data; name=\"%@\"\\r\\n\\r\\n\", param[@\"name\"]];\n    [body appendFormat:@\"%@\", param[@\"value\"]];\n  }\n}\n[body appendFormat:@\"\\r\\n--%@--\\r\\n\", boundary];\nNSData *postData = [body dataUsingEncoding:NSUTF8StringEncoding];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"POST\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "Post multiple files in the same parameter  via form-data": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/post\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\nNSArray *parameters = @[\n  @{ @\"name\": @\"multiple files\", @\"fileName\": @\"/Users/shreyshah/Desktop/openapi3.json\" }, \n  @{ @\"name\": @\"multiple files\", @\"fileName\": @\"/Users/shreyshah/Desktop/openapi3.yaml\" } ];\nNSString *boundary = @\"----WebKitFormBoundary7MA4YWxkTrZu0gW\";\nNSError *error;\nNSMutableString *body = [NSMutableString string];\nfor (NSDictionary *param in parameters) {\n  [body appendFormat:@\"--%@\\r\\n\", boundary];\n  if (param[@\"fileName\"]) {\n    [body appendFormat:@\"Content-Disposition:form-data; name=\"%@\"; filename=\"%@\"\\r\\n\", param[@\"name\"], param[@\"fileName\"]];\n    [body appendFormat:@\"Content-Type: %@\\r\\n\\r\\n\", param[@\"contentType\"]];\n    [body appendFormat:@\"%@\", [NSString stringWithContentsOfFile:param[@\"fileName\"]     encoding:NSUTF8StringEncoding error:&error]];\n    if (error) {\n      NSLog(@\"%@\", error);\n    }\n  } else {\n    [body appendFormat:@\"Content-Disposition:form-data; name=\"%@\"\\r\\n\\r\\n\", param[@\"name\"]];\n    [body appendFormat:@\"%@\", param[@\"value\"]];\n  }\n}\n[body appendFormat:@\"\\r\\n--%@--\\r\\n\", boundary];\nNSData *postData = [body dataUsingEncoding:NSUTF8StringEncoding];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"POST\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "Post a file via form-data, without file src specified": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/post\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\nNSArray *parameters = @[\n  @{ @\"name\": @\"key\", @\"fileName\": @\"/path/to/file\" } ];\nNSString *boundary = @\"----WebKitFormBoundary7MA4YWxkTrZu0gW\";\nNSError *error;\nNSMutableString *body = [NSMutableString string];\nfor (NSDictionary *param in parameters) {\n  [body appendFormat:@\"--%@\\r\\n\", boundary];\n  if (param[@\"fileName\"]) {\n    [body appendFormat:@\"Content-Disposition:form-data; name=\"%@\"; filename=\"%@\"\\r\\n\", param[@\"name\"], param[@\"fileName\"]];\n    [body appendFormat:@\"Content-Type: %@\\r\\n\\r\\n\", param[@\"contentType\"]];\n    [body appendFormat:@\"%@\", [NSString stringWithContentsOfFile:param[@\"fileName\"]     encoding:NSUTF8StringEncoding error:&error]];\n    if (error) {\n      NSLog(@\"%@\", error);\n    }\n  } else {\n    [body appendFormat:@\"Content-Disposition:form-data; name=\"%@\"\\r\\n\\r\\n\", param[@\"name\"]];\n    [body appendFormat:@\"%@\", param[@\"value\"]];\n  }\n}\n[body appendFormat:@\"\\r\\n--%@--\\r\\n\", boundary];\nNSData *postData = [body dataUsingEncoding:NSUTF8StringEncoding];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"POST\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "Multiple form-data fields with same names": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/post\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\nNSArray *parameters = @[\n  @{ @\"name\": @\"key\", @\"value\": @\"value1\" }, \n  @{ @\"name\": @\"key\", @\"value\": @\"value2\" }, \n  @{ @\"name\": @\"file\", @\"fileName\": @\"/Users/shreyshah/Desktop/openapi3.json\" }, \n  @{ @\"name\": @\"file\", @\"fileName\": @\"/Users/shreyshah/Desktop/test.c\" } ];\nNSString *boundary = @\"----WebKitFormBoundary7MA4YWxkTrZu0gW\";\nNSError *error;\nNSMutableString *body = [NSMutableString string];\nfor (NSDictionary *param in parameters) {\n  [body appendFormat:@\"--%@\\r\\n\", boundary];\n  if (param[@\"fileName\"]) {\n    [body appendFormat:@\"Content-Disposition:form-data; name=\"%@\"; filename=\"%@\"\\r\\n\", param[@\"name\"], param[@\"fileName\"]];\n    [body appendFormat:@\"Content-Type: %@\\r\\n\\r\\n\", param[@\"contentType\"]];\n    [body appendFormat:@\"%@\", [NSString stringWithContentsOfFile:param[@\"fileName\"]     encoding:NSUTF8StringEncoding error:&error]];\n    if (error) {\n      NSLog(@\"%@\", error);\n    }\n  } else {\n    [body appendFormat:@\"Content-Disposition:form-data; name=\"%@\"\\r\\n\\r\\n\", param[@\"name\"]];\n    [body appendFormat:@\"%@\", param[@\"value\"]];\n  }\n}\n[body appendFormat:@\"\\r\\n--%@--\\r\\n\", boundary];\nNSData *postData = [body dataUsingEncoding:NSUTF8StringEncoding];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"POST\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "Multiple query params with same names": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://postman-echo.com/get?query=value1&query=value2\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n\n[request setHTTPMethod:@\"GET\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];",
  "GraphQL query": "#import <Foundation/Foundation.h>\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.github.com/graphql\"]\n  cachePolicy:NSURLRequestUseProtocolCachePolicy\n  timeoutInterval:10.0];\n  NSDictionary *headers = @{\n    @\"Content-Type\": @\"application/json\"\n  };\n  [request setAllHTTPHeaderFields:headers];\nNSData *postData = [[NSData alloc] initWithData:[@\"{\\\"query\\\":\\\"query {\\\\n    __schema\\\\n}\\\",\\\"variables\\\":\\\"\\\"}\" dataUsingEncoding:NSUTF8StringEncoding]];\n[request setHTTPBody:postData];\n\n[request setHTTPMethod:@\"POST\"];\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\ncompletionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n  if (error) {\n    NSLog(@\"%@\", error);\n  } else {\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n    NSLog(@\"%@\", httpResponse);\n  }\n}];\n[dataTask resume];"
}